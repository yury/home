#!/bin/sh -e
#
# Uses external display if connected; or internal display otherwise.
#
# Written in 2014 by Suraj N. Kurapati <https://github.com/sunaku>

# detect and register active displays as variables in this script
eval $(xrandr --verbose | awk '
  $2 ~  /connected/ {
    device=$1
    gsub("-", "", $1)
    display=$1
    print display "=" device
  }
  $2 == "connected" {
    print display "_connected=1"
    preferred=""
  }
  /\+preferred/ || (!preferred && $1 ~ /^[[:digit:]]+x[[:digit:]]+$/) {
    print display "_preferred_size=" $1
    preferred=$1
  }
  /\*current/ {
    print display "_active=1"
    print display "_size=" $1
  }
')

if test -n "$DP22_connected" ; then
  # switch off internal display and use external one

  test -n "$eDP1_active" &&
    set -- "$@" --output "$eDP1" --off

  test -z "$DP22_active" &&
    set -- "$@" --output "$DP22" --auto

  test "$DP22_preferred_size" != "$DP22_size" &&
    set -- "$@" ';' xrandr --size "$DP22_preferred_size"

elif test -n "$HDMI1_connected" ; then
  # switch off internal display and use external one

  test -n "$eDP1_active" &&
    set -- "$@" --output "$eDP1" --off

  test -z "$HDMI1_active" &&
    set -- "$@" --output "$HDMI1" --auto

  test "$HDMI1_preferred_size" != "$HDMI1_size" &&
    set -- "$@" ';' xrandr --size "$HDMI1_preferred_size"

elif test -n "$eDP1_connected" ; then
  # external display not connected; use internal one

  test -z "$eDP1_active" &&
    set -- "$@" --output "$DP22" --off \
                --output "$HDMI1" --off \
                --output "$eDP1" --auto

  test "$eDP1_preferred_size" != "$eDP1_size" &&
    set -- "$@" ';' xrandr --size "$eDP1_preferred_size"

  # reduce brightness of internal display
  xbacklight | grep -q '^100' && xbacklight = 15
fi

test $# -gt 0 && eval xrandr "$@" ||:
